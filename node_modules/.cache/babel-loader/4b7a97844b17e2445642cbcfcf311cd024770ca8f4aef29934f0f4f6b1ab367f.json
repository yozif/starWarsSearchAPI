{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\TorkiaY\\\\Documents\\\\React Builds\\\\starWarsSearchAPI\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport * as React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport Header from \"./starWarsComponents/js/Header\";\nimport CategorySelect from \"./starWarsComponents/js/CategorySelect\";\nimport SearchBar from \"./starWarsComponents/js/SearchBar\";\nimport SearchResults from \"./starWarsComponents/js/SearchResults\";\nimport SortOutput from \"./starWarsComponents/js/SortOutput\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const [searchValue, setSearchValue] = useState(\"\");\n  const [category, setCategory] = useState(\"\");\n  const [azActive, setAzActive] = useState(false);\n  const [outputs, setOutputs] = useState([]);\n  const [loading, setLoading] = useState(false);\n  function sortOutput() {\n    let strAscending = \"\";\n    if (category === \"films\") {\n      strAscending = [...outputs].sort((a, b) => a.title > b.title ? 1 : -1);\n    } else {\n      strAscending = [...outputs].sort((a, b) => a.name > b.name ? 1 : -1);\n    }\n    setOutputs(strAscending);\n    setAzActive(true);\n  }\n  function categoryChange(event) {\n    const value = event.target.value;\n    setCategory(value);\n    makeApiCall(searchValue, category);\n  }\n  function searchChange(event) {\n    const value = event.target.value;\n    setSearchValue(value);\n  }\n  function handleSearch(event) {\n    event.preventDefault();\n    makeApiCall(searchValue, category);\n  }\n  function makeApiCall(searchInput, categoryInput) {\n    const searchUrl = `https://swapi.dev/api/${categoryInput}?search=${searchInput}`;\n    setLoading(true);\n    fetch(searchUrl).then(response => {\n      return response.json();\n    }).then(jsonData => {\n      setOutputs(jsonData.results);\n    });\n  }\n  useEffect(() => {\n    if (outputs.length > 0) {\n      setLoading(false);\n      setAzActive(false);\n    }\n  }, [outputs]);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"starWarsWrapper\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"searchBoxContainer\",\n      children: [/*#__PURE__*/_jsxDEV(CategorySelect, {\n        onClick: categoryChange,\n        category: category\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SearchBar, {\n        onClick: handleSearch,\n        onChange: searchChange,\n        onSubmit: handleSearch,\n        searchValue: searchValue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SortOutput, {\n      category: category,\n      azActive: azActive,\n      sortOutput: sortOutput\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), loading ? 'Loading...' : /*#__PURE__*/_jsxDEV(SearchResults, {\n      outputs: outputs,\n      category: category\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 33\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"//CNbL463ReBRMSRDje/6SgscxM=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Header","CategorySelect","SearchBar","SearchResults","SortOutput","jsxDEV","_jsxDEV","App","_s","searchValue","setSearchValue","category","setCategory","azActive","setAzActive","outputs","setOutputs","loading","setLoading","sortOutput","strAscending","sort","a","b","title","name","categoryChange","event","value","target","makeApiCall","searchChange","handleSearch","preventDefault","searchInput","categoryInput","searchUrl","fetch","then","response","json","jsonData","results","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onChange","onSubmit","_c","$RefreshReg$"],"sources":["C:/Users/TorkiaY/Documents/React Builds/starWarsSearchAPI/src/App.js"],"sourcesContent":["import * as React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport Header from \"./starWarsComponents/js/Header\";\r\nimport CategorySelect from \"./starWarsComponents/js/CategorySelect\";\r\nimport SearchBar from \"./starWarsComponents/js/SearchBar\";\r\nimport SearchResults from \"./starWarsComponents/js/SearchResults\";\r\nimport SortOutput from \"./starWarsComponents/js/SortOutput\";\r\n\r\nexport default function App() {\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n  const [category, setCategory] = useState(\"\");\r\n  const [azActive, setAzActive] = useState(false);\r\n  const [outputs, setOutputs] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  function sortOutput() {\r\n    let strAscending = \"\";\r\n    if (category === \"films\") {\r\n      strAscending = [...outputs].sort((a, b) => (a.title > b.title ? 1 : -1));\r\n    } else {\r\n      strAscending = [...outputs].sort((a, b) => (a.name > b.name ? 1 : -1));\r\n    }\r\n    setOutputs(strAscending);\r\n    setAzActive(true);\r\n  }\r\n\r\n  function categoryChange(event) {\r\n    const value = event.target.value;\r\n    setCategory(value);\r\n    makeApiCall(searchValue, category);\r\n  }\r\n\r\n  function searchChange(event) {\r\n    const value = event.target.value;\r\n    setSearchValue(value);\r\n  }\r\n\r\n  function handleSearch(event) {\r\n    event.preventDefault();\r\n    makeApiCall(searchValue, category);\r\n  }\r\n\r\n  function makeApiCall(searchInput, categoryInput) {\r\n    const searchUrl = `https://swapi.dev/api/${categoryInput}?search=${searchInput}`;\r\n\r\n    setLoading(true);\r\n\r\n    fetch(searchUrl)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then((jsonData) => {\r\n        setOutputs(jsonData.results);\r\n      });\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (outputs.length > 0) {\r\n      setLoading(false);\r\n      setAzActive(false);\r\n    }\r\n  }, [outputs])\r\n\r\n  return (\r\n    <main className=\"starWarsWrapper\">\r\n      <Header />\r\n      <div className=\"searchBoxContainer\">\r\n        <CategorySelect onClick={categoryChange} category={category} />\r\n        <SearchBar\r\n          onClick={handleSearch}\r\n          onChange={searchChange}\r\n          onSubmit={handleSearch}\r\n          searchValue={searchValue}\r\n        />\r\n      </div>\r\n      <SortOutput\r\n        category={category}\r\n        azActive={azActive}\r\n        sortOutput={sortOutput}\r\n      />\r\n      {loading ? 'Loading...' : <SearchResults outputs={outputs} category={category} />}\r\n    </main>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}